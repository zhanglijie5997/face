{"version":3,"file":"cocos_core.js","sources":["../../../core/core.ts","../../../core/cocos_core.ts"],"sourcesContent":["class BlindBox {\n\tpublic static instance = new BlindBox();\n\n\tconstructor() {\n\t\tthis.isInBindBox();\n\t}\n\t/**\n\t * 断言,判断是否在blindbox中\n\t */\n\tisInBindBox() {\n\t\tif (!window) {\n\t\t\tconsole.warn(\"This SDK only works with browsers.\");\n\t\t}\n\t\tif (!window.blindbox) {\n\t\t\tconsole.warn(\"This SDK only suport with bindbox app.\");\n\t\t}\n\t}\n\t/**\n\t * blindbox 支付页面\n\t * @param OrderId   订单id\n\t * @param OrderType 订单类型\n\t * @param callback  不在原生的回调\n\t */\n\tcallNativeCheckPaid(\n\t\tOrderId: string,\n\t\tOrderType: number,\n\t\tcallback?: Function\n\t): void {\n\t\ttry {\n\t\t\twindow.blindbox.callNativeCheckPaid(\n\t\t\t\tJSON.stringify({ OrderId, OrderType })\n\t\t\t);\n\t\t} catch (error) {\n\t\t\tcallback?.();\n\t\t}\n\t}\n\t/**\n\t * 关闭页面\n\t * @param pageId    页面id\n\t * @param callback\n\t */\n\tcallNativeCloseAndRedirectPage(\n\t\tpageId: CallNativeCloseAndRedirectPageParams,\n\t\tcallback?: Function\n\t) {\n\t\ttry {\n\t\t\twindow.blindbox.callNativeCloseAndRedirectPage(\n\t\t\t\tJSON.stringify(pageId)\n\t\t\t);\n\t\t} catch (error) {}\n\t}\n\t/**\n\t * 获取API请求头\n\t * @param callback 如果在cocos界面会使用此回调\n\t * @returns {Object}\n\t */\n\tcallNativeLoadHeader(\n\t\tcallback?: Function\n\t): Promise<CallNativeLoadHeaderType | undefined> {\n\t\treturn new Promise<CallNativeLoadHeaderType | undefined>((res, rej) => {\n\t\t\tconst result: CallNativeLoadHeaderType | undefined =\n\t\t\t\twindow.blindbox.callNativeLoadHeader();\n\t\t\t// 如果存在\n\t\t\tcallback?.call({\n\t\t\t\tname: BlindBoxName.callNativeLoadHeader,\n\t\t\t\tparams: result,\n\t\t\t});\n\t\t\tres(result);\n\t\t});\n\t}\n\t/**\n\t * 通知app处理异常\n\t * @param v\n\t */\n\tcallNativeHandleByErrorCode(value: Object, callback?: Function) {\n\t\ttry {\n\t\t\twindow.blindbox.callNativeHandleByErrorCode(JSON.stringify(value));\n\t\t} catch (error) {\n\t\t\tcallback?.();\n\t\t}\n\t}\n\t/**\n\t * 创建订单后调用\n\t * @param value 订单信息\n\t * @param callback\n\t */\n\tcallNativeCloseUrl(value: Object, callback?: Function) {\n\t\ttry {\n\t\t\twindow.blindbox.callNativeCloseUrl(JSON.stringify(value));\n\t\t} catch (error) {\n\t\t\tcallback?.();\n\t\t}\n\t}\n\n\t/**\n\t * 收到推送通知h5跳转页面 需要传进去类型\n\t * @param callback\n\t * @returns\n\t */\n\tcallJsByNotify<T>(callback?: Function) {\n\t\treturn new Promise<T>((res, rej) => {\n\t\t\tconst result: T = window.blindbox.callJsByNotify() as T;\n\t\t\tres(result);\n\t\t});\n\t}\n\t/**\n\t * 余额支付成功\n\t * @param v\n\t */\n\tcallNativePaySuccess(\n\t\tvalue: \"rules\" | \"charge\" | \"combo\",\n\t\tcallback?: Function\n\t) {\n\t\ttry {\n\t\t\twindow.blindbox.callNativePaySuccess(JSON.stringify(value));\n\t\t} catch (error) {\n\t\t\tcallback?.();\n\t\t}\n\t}\n\t/**\n\t * 插入数据\n\t * @param k             eg: 用户id + 接口名称\n\t * @param v             eg: 接口返回结果\n\t * @param Expiration    过期时间\n\t * @param callback\n\t */\n\tcallNativeInsertDB(\n\t\tk: string,\n\t\tv: Object & { Expiration: number },\n\t\tExpiration: number = 0,\n\t\tcallback?: Function\n\t) {\n\t\ttry {\n\t\t\twindow.blindbox.callNativeInsertDB(\n\t\t\t\tJSON.stringify({\n\t\t\t\t\tkey: k,\n\t\t\t\t\tresponse: v,\n\t\t\t\t\tExpiration: v.Expiration || Expiration,\n\t\t\t\t})\n\t\t\t);\n\t\t} catch (error) {\n\t\t\tcallback?.();\n\t\t}\n\t}\n\t/**\n\t * 获取参数\n\t * @param k eg: 用户id + 接口名称\n\t * @returns\n\t */\n\tcallNativeSelectDB<T>(k: string): Promise<T> {\n\t\treturn new Promise<T>((res, rej) => {\n\t\t\tconst result = window.blindbox.callNativeSelectDB<T>(k);\n\t\t\tres(result);\n\t\t});\n\t}\n\n\t/**\n\t * 修改状态栏颜色\n\t * @param v hex色值\n\t * @param callback\n\t */\n\tcallNativeUpdateStatusBar(v: string, callback?: Function) {\n\t\ttry {\n\t\t\twindow.blindbox.callNativeUpdateStatusBar(v);\n\t\t} catch (error) {\n\t\t\tcallback?.();\n\t\t}\n\t}\n\t/**\n\t * 跳转首页导航\n\t * @param v 0 -> 首页 1 -> 游戏大厅 2 -> 商城 3 —> 仓库 4 -> 我的\n\t */\n\tcallNativeBackHome(v: number, callback?: Function) {\n\t\ttry {\n\t\t\twindow.blindbox.callNativeBackHome(v);\n\t\t} catch (error) {\n\t\t\tcallback?.();\n\t\t}\n\t}\n\n\t/**\n\t * 返回\n\t * @param callback\n\t */\n\tcallNativeBack(callback?: Function) {\n\t\ttry {\n\t\t\twindow.blindbox.callNativeBack();\n\t\t} catch (error) {\n\t\t\tcallback?.();\n\t\t}\n\t}\n\n\t/**\n\t * scheme跳转\n\t * @param v 路径\n\t * @param isCloseCurrentPage 是否关闭当前界面\n\t * @param jumpType 原生0，h5 1\n\t * @param statusBarType true -> 原生 false -> 无导航\n\t */\n\tcallNativePagesJump(\n\t\tv: string,\n\t\tisCloseCurrentPage = false,\n\t\tjumpType = 0,\n\t\tstatusBarType = true,\n\t\tcallback?: Function\n\t) {\n\t\ttry {\n\t\t\twindow.blindbox.callNativePagesJump(\n\t\t\t\tJSON.stringify({\n\t\t\t\t\tjumpType, // 原生0，h5 1\n\t\t\t\t\tjumpScheme: v,\n\t\t\t\t\tstatusBarType, // true -> 原生 false -> 无导航\n\t\t\t\t\tisCloseCurrentPage, // 是否关闭当前界面\n\t\t\t\t})\n\t\t\t);\n\t\t} catch (error) {\n\t\t\tcallback?.();\n\t\t}\n\t}\n\n\t/**\n\t * 跳转H5\n\t * @param pageId\n\t * @param statusBarType  true -> 原生控制导航栏\n\t * @param callback\n\t */\n\tcallNativePagesJumpWeb(\n\t\tpageId: string,\n\t\tstatusBarType = true,\n\t\tcallback?: Function\n\t) {\n\t\ttry {\n\t\t\twindow.blindbox.callNativePagesJumpWeb(\n\t\t\t\tJSON.stringify({\n\t\t\t\t\tpageId,\n\t\t\t\t\tstatusBarType,\n\t\t\t\t})\n\t\t\t);\n\t\t} catch (error) {\n\t\t\tcallback?.();\n\t\t}\n\t}\n\n\t/**\n\t * 跳转盲盒机\n\t * @param MachineId\n\t * @param openPayDialog 打开弹窗\n\t */\n\tcallNativeOpenMachine(\n\t\tMachineId: string,\n\t\topenPayDialog: boolean = false,\n\t\tcallback?: Function\n\t) {\n\t\ttry {\n\t\t\twindow.blindbox.callNativeOpenMachine(MachineId, openPayDialog);\n\t\t} catch (error) {\n\t\t\tcallback?.();\n\t\t}\n\t}\n\n\t/**\n\t * 播放音频\n\t * @param v\n\t */\n\tcallNativePlayerAudio(v: string, callback?: Function) {\n\t\ttry {\n\t\t\twindow.blindbox.callNativePlayerAudio(v);\n\t\t} catch (error) {\n\t\t\tcallback?.();\n\t\t}\n\t}\n\n\t/**\n\t * 设置进度条\n\t * @param progress 进度\n\t * @param fn\n\t */\n\tcallNativeSetLoadingProgress(progress: number, fn?: Function) {\n\t\ttry {\n\t\t\twindow.blindbox.callNativeLoading(progress);\n\t\t} catch (error) {\n\t\t\tfn?.();\n\t\t}\n\t}\n\t/**\n\t * 获取用户信息\n\t * @returns\n\t */\n\tcallNativeGetUserInfo<T>(): Promise<T> {\n\t\treturn new Promise((res) => {\n\t\t\tconst result = window.blindbox.callNativeGetUserInfo() as T;\n\t\t\tres(result);\n\t\t});\n\t}\n\t/**\n\t * mqtt发布消息\n\t * @param data\n\t */\n\tcallNativePublishMessageForTopic(\n\t\tdata: CallNativePublishMessageForTopicType = {\n\t\t\ttopic: \"\",\n\t\t\tmsg: \"\",\n\t\t\tqos: 0,\n\t\t\tretained: false,\n\t\t},\n\t\tfn?: Function\n\t) {\n\t\ttry {\n\t\t\twindow.blindbox.callNativePublishMessageForTopic(\n\t\t\t\tdata.topic,\n\t\t\t\tdata.msg,\n\t\t\t\tdata.qos,\n\t\t\t\tdata.retained\n\t\t\t);\n\t\t} catch (error) {\n\t\t\tfn?.();\n\t\t}\n\t}\n}\n\nexport default BlindBox;\n","import core from \"./core\";\n\ninterface Params {\n\tname: string;\n\tparams: {\n\t\tpageId: string;\n\t\ttype?: boolean;\n\t};\n}\n\nclass CocosCore {\n\tpublic static instance = new CocosCore();\n\tcore: core;\n\tconstructor() {\n\t\tthis.core = core.instance;\n\t}\n\n\t/**\n\t * 跳转H5\n\t * @param v 跳转路径\n\t */\n\tcallNativeCheckPaid(v: Params) {\n\t\tthis.core.callNativePagesJumpWeb(v.params.pageId, v.params.type);\n\t}\n\n\t/**\n\t * 跳转盲盒机\n\t * @param param0 id firstId\n\t * @param param1 type 是否打开弹窗\n\t */\n\tcallNativeOpenMachine({ id, type }: { id: string; type: boolean }) {\n\t\tthis.core.callNativeOpenMachine(id, type);\n\t}\n\n\t/**\n\t * 跳转web\n\t * @param param0 web路径\n\t * @param type   true -> 原生控制导航栏\n\t */\n\tcallNativePagesJumpWeb({\n\t\tpageId,\n\t\ttype,\n\t}: {\n\t\tpageId: string;\n\t\ttype: boolean;\n\t}) {\n\t\tthis.core.callNativePagesJumpWeb(pageId, type);\n\t}\n\n\t/**\n\t * 设置进度条\n\t * @param progress 进度\n\t * @param fn\n\t */\n\tcallNativeSetLoadingProgress(progress: number) {\n\t\tthis.core.callNativeSetLoadingProgress(progress);\n\t}\n}\n\nexport default CocosCore;\n"],"names":["BlindBox","constructor","this","isInBindBox","window","console","warn","blindbox","callNativeCheckPaid","OrderId","OrderType","callback","JSON","stringify","error","callNativeCloseAndRedirectPage","pageId","callNativeLoadHeader","Promise","res","rej","result","call","name","BlindBoxName","params","callNativeHandleByErrorCode","value","callNativeCloseUrl","callJsByNotify","callNativePaySuccess","callNativeInsertDB","k","v","Expiration","key","response","callNativeSelectDB","callNativeUpdateStatusBar","callNativeBackHome","callNativeBack","callNativePagesJump","isCloseCurrentPage","jumpType","statusBarType","jumpScheme","callNativePagesJumpWeb","callNativeOpenMachine","MachineId","openPayDialog","callNativePlayerAudio","callNativeSetLoadingProgress","progress","fn","callNativeLoading","callNativeGetUserInfo","callNativePublishMessageForTopic","data","topic","msg","qos","retained","CocosCore","core","instance","type","id"],"mappings":"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"}